// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: utility_protobuf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_utility_5fprotobuf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_utility_5fprotobuf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_utility_5fprotobuf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_utility_5fprotobuf_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_utility_5fprotobuf_2eproto;
namespace utility_protobuf {
class InitReqMessage;
struct InitReqMessageDefaultTypeInternal;
extern InitReqMessageDefaultTypeInternal _InitReqMessage_default_instance_;
class InitRespMessage;
struct InitRespMessageDefaultTypeInternal;
extern InitRespMessageDefaultTypeInternal _InitRespMessage_default_instance_;
class QRScanReqMessage;
struct QRScanReqMessageDefaultTypeInternal;
extern QRScanReqMessageDefaultTypeInternal _QRScanReqMessage_default_instance_;
class QRScanRespMessage;
struct QRScanRespMessageDefaultTypeInternal;
extern QRScanRespMessageDefaultTypeInternal _QRScanRespMessage_default_instance_;
class QRScanRespMessage_QRScanResult;
struct QRScanRespMessage_QRScanResultDefaultTypeInternal;
extern QRScanRespMessage_QRScanResultDefaultTypeInternal _QRScanRespMessage_QRScanResult_default_instance_;
class ResampleImageReqMessage;
struct ResampleImageReqMessageDefaultTypeInternal;
extern ResampleImageReqMessageDefaultTypeInternal _ResampleImageReqMessage_default_instance_;
class ResampleImageRespMessage;
struct ResampleImageRespMessageDefaultTypeInternal;
extern ResampleImageRespMessageDefaultTypeInternal _ResampleImageRespMessage_default_instance_;
class TextScanMessage;
struct TextScanMessageDefaultTypeInternal;
extern TextScanMessageDefaultTypeInternal _TextScanMessage_default_instance_;
}  // namespace utility_protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::utility_protobuf::InitReqMessage* Arena::CreateMaybeMessage<::utility_protobuf::InitReqMessage>(Arena*);
template<> ::utility_protobuf::InitRespMessage* Arena::CreateMaybeMessage<::utility_protobuf::InitRespMessage>(Arena*);
template<> ::utility_protobuf::QRScanReqMessage* Arena::CreateMaybeMessage<::utility_protobuf::QRScanReqMessage>(Arena*);
template<> ::utility_protobuf::QRScanRespMessage* Arena::CreateMaybeMessage<::utility_protobuf::QRScanRespMessage>(Arena*);
template<> ::utility_protobuf::QRScanRespMessage_QRScanResult* Arena::CreateMaybeMessage<::utility_protobuf::QRScanRespMessage_QRScanResult>(Arena*);
template<> ::utility_protobuf::ResampleImageReqMessage* Arena::CreateMaybeMessage<::utility_protobuf::ResampleImageReqMessage>(Arena*);
template<> ::utility_protobuf::ResampleImageRespMessage* Arena::CreateMaybeMessage<::utility_protobuf::ResampleImageRespMessage>(Arena*);
template<> ::utility_protobuf::TextScanMessage* Arena::CreateMaybeMessage<::utility_protobuf::TextScanMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace utility_protobuf {

// ===================================================================

class InitReqMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.InitReqMessage) */ {
 public:
  inline InitReqMessage() : InitReqMessage(nullptr) {}
  ~InitReqMessage() override;
  explicit PROTOBUF_CONSTEXPR InitReqMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InitReqMessage(const InitReqMessage& from);
  InitReqMessage(InitReqMessage&& from) noexcept
    : InitReqMessage() {
    *this = ::std::move(from);
  }

  inline InitReqMessage& operator=(const InitReqMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitReqMessage& operator=(InitReqMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitReqMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitReqMessage* internal_default_instance() {
    return reinterpret_cast<const InitReqMessage*>(
               &_InitReqMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InitReqMessage& a, InitReqMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(InitReqMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitReqMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitReqMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitReqMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InitReqMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InitReqMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitReqMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.InitReqMessage";
  }
  protected:
  explicit InitReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExpireTimestampFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // int32 expire_timestamp = 1;
  void clear_expire_timestamp();
  int32_t expire_timestamp() const;
  void set_expire_timestamp(int32_t value);
  private:
  int32_t _internal_expire_timestamp() const;
  void _internal_set_expire_timestamp(int32_t value);
  public:

  // int32 type = 2;
  void clear_type();
  int32_t type() const;
  void set_type(int32_t value);
  private:
  int32_t _internal_type() const;
  void _internal_set_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.InitReqMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t expire_timestamp_;
  int32_t type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class InitRespMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.InitRespMessage) */ {
 public:
  inline InitRespMessage() : InitRespMessage(nullptr) {}
  ~InitRespMessage() override;
  explicit PROTOBUF_CONSTEXPR InitRespMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InitRespMessage(const InitRespMessage& from);
  InitRespMessage(InitRespMessage&& from) noexcept
    : InitRespMessage() {
    *this = ::std::move(from);
  }

  inline InitRespMessage& operator=(const InitRespMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitRespMessage& operator=(InitRespMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitRespMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitRespMessage* internal_default_instance() {
    return reinterpret_cast<const InitRespMessage*>(
               &_InitRespMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InitRespMessage& a, InitRespMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(InitRespMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitRespMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitRespMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitRespMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InitRespMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InitRespMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitRespMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.InitRespMessage";
  }
  protected:
  explicit InitRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // int32 status = 1;
  void clear_status();
  int32_t status() const;
  void set_status(int32_t value);
  private:
  int32_t _internal_status() const;
  void _internal_set_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.InitRespMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ResampleImageReqMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.ResampleImageReqMessage) */ {
 public:
  inline ResampleImageReqMessage() : ResampleImageReqMessage(nullptr) {}
  ~ResampleImageReqMessage() override;
  explicit PROTOBUF_CONSTEXPR ResampleImageReqMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResampleImageReqMessage(const ResampleImageReqMessage& from);
  ResampleImageReqMessage(ResampleImageReqMessage&& from) noexcept
    : ResampleImageReqMessage() {
    *this = ::std::move(from);
  }

  inline ResampleImageReqMessage& operator=(const ResampleImageReqMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResampleImageReqMessage& operator=(ResampleImageReqMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResampleImageReqMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResampleImageReqMessage* internal_default_instance() {
    return reinterpret_cast<const ResampleImageReqMessage*>(
               &_ResampleImageReqMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ResampleImageReqMessage& a, ResampleImageReqMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ResampleImageReqMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResampleImageReqMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResampleImageReqMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResampleImageReqMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ResampleImageReqMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ResampleImageReqMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResampleImageReqMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.ResampleImageReqMessage";
  }
  protected:
  explicit ResampleImageReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDecodePicFieldNumber = 1,
    kEncodePicFieldNumber = 2,
    kRePicXFieldNumber = 3,
    kRePicYFieldNumber = 4,
    kUnknown0FieldNumber = 5,
  };
  // string decode_pic = 1;
  void clear_decode_pic();
  const std::string& decode_pic() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_decode_pic(ArgT0&& arg0, ArgT... args);
  std::string* mutable_decode_pic();
  PROTOBUF_NODISCARD std::string* release_decode_pic();
  void set_allocated_decode_pic(std::string* decode_pic);
  private:
  const std::string& _internal_decode_pic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decode_pic(const std::string& value);
  std::string* _internal_mutable_decode_pic();
  public:

  // string encode_pic = 2;
  void clear_encode_pic();
  const std::string& encode_pic() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_encode_pic(ArgT0&& arg0, ArgT... args);
  std::string* mutable_encode_pic();
  PROTOBUF_NODISCARD std::string* release_encode_pic();
  void set_allocated_encode_pic(std::string* encode_pic);
  private:
  const std::string& _internal_encode_pic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encode_pic(const std::string& value);
  std::string* _internal_mutable_encode_pic();
  public:

  // int32 re_pic_x = 3;
  void clear_re_pic_x();
  int32_t re_pic_x() const;
  void set_re_pic_x(int32_t value);
  private:
  int32_t _internal_re_pic_x() const;
  void _internal_set_re_pic_x(int32_t value);
  public:

  // int32 re_pic_y = 4;
  void clear_re_pic_y();
  int32_t re_pic_y() const;
  void set_re_pic_y(int32_t value);
  private:
  int32_t _internal_re_pic_y() const;
  void _internal_set_re_pic_y(int32_t value);
  public:

  // int32 unknown_0 = 5;
  void clear_unknown_0();
  int32_t unknown_0() const;
  void set_unknown_0(int32_t value);
  private:
  int32_t _internal_unknown_0() const;
  void _internal_set_unknown_0(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.ResampleImageReqMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr decode_pic_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encode_pic_;
  int32_t re_pic_x_;
  int32_t re_pic_y_;
  int32_t unknown_0_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ResampleImageRespMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.ResampleImageRespMessage) */ {
 public:
  inline ResampleImageRespMessage() : ResampleImageRespMessage(nullptr) {}
  ~ResampleImageRespMessage() override;
  explicit PROTOBUF_CONSTEXPR ResampleImageRespMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResampleImageRespMessage(const ResampleImageRespMessage& from);
  ResampleImageRespMessage(ResampleImageRespMessage&& from) noexcept
    : ResampleImageRespMessage() {
    *this = ::std::move(from);
  }

  inline ResampleImageRespMessage& operator=(const ResampleImageRespMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResampleImageRespMessage& operator=(ResampleImageRespMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResampleImageRespMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResampleImageRespMessage* internal_default_instance() {
    return reinterpret_cast<const ResampleImageRespMessage*>(
               &_ResampleImageRespMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ResampleImageRespMessage& a, ResampleImageRespMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ResampleImageRespMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResampleImageRespMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResampleImageRespMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResampleImageRespMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ResampleImageRespMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ResampleImageRespMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResampleImageRespMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.ResampleImageRespMessage";
  }
  protected:
  explicit ResampleImageRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrCodeFieldNumber = 1,
  };
  // int32 err_code = 1;
  void clear_err_code();
  int32_t err_code() const;
  void set_err_code(int32_t value);
  private:
  int32_t _internal_err_code() const;
  void _internal_set_err_code(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.ResampleImageRespMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t err_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class TextScanMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.TextScanMessage) */ {
 public:
  inline TextScanMessage() : TextScanMessage(nullptr) {}
  ~TextScanMessage() override;
  explicit PROTOBUF_CONSTEXPR TextScanMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TextScanMessage(const TextScanMessage& from);
  TextScanMessage(TextScanMessage&& from) noexcept
    : TextScanMessage() {
    *this = ::std::move(from);
  }

  inline TextScanMessage& operator=(const TextScanMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextScanMessage& operator=(TextScanMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextScanMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextScanMessage* internal_default_instance() {
    return reinterpret_cast<const TextScanMessage*>(
               &_TextScanMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TextScanMessage& a, TextScanMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TextScanMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextScanMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextScanMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TextScanMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TextScanMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TextScanMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TextScanMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.TextScanMessage";
  }
  protected:
  explicit TextScanMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPicPathFieldNumber = 2,
    kTextScanIdFieldNumber = 1,
    kHaveTextFieldNumber = 3,
    kUnknown0FieldNumber = 4,
    kRateFieldNumber = 5,
  };
  // string pic_path = 2;
  void clear_pic_path();
  const std::string& pic_path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pic_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pic_path();
  PROTOBUF_NODISCARD std::string* release_pic_path();
  void set_allocated_pic_path(std::string* pic_path);
  private:
  const std::string& _internal_pic_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pic_path(const std::string& value);
  std::string* _internal_mutable_pic_path();
  public:

  // int32 text_scan_id = 1;
  void clear_text_scan_id();
  int32_t text_scan_id() const;
  void set_text_scan_id(int32_t value);
  private:
  int32_t _internal_text_scan_id() const;
  void _internal_set_text_scan_id(int32_t value);
  public:

  // int32 have_text = 3;
  void clear_have_text();
  int32_t have_text() const;
  void set_have_text(int32_t value);
  private:
  int32_t _internal_have_text() const;
  void _internal_set_have_text(int32_t value);
  public:

  // int32 unknown_0 = 4;
  void clear_unknown_0();
  int32_t unknown_0() const;
  void set_unknown_0(int32_t value);
  private:
  int32_t _internal_unknown_0() const;
  void _internal_set_unknown_0(int32_t value);
  public:

  // float rate = 5;
  void clear_rate();
  float rate() const;
  void set_rate(float value);
  private:
  float _internal_rate() const;
  void _internal_set_rate(float value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.TextScanMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pic_path_;
  int32_t text_scan_id_;
  int32_t have_text_;
  int32_t unknown_0_;
  float rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class QRScanReqMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.QRScanReqMessage) */ {
 public:
  inline QRScanReqMessage() : QRScanReqMessage(nullptr) {}
  ~QRScanReqMessage() override;
  explicit PROTOBUF_CONSTEXPR QRScanReqMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QRScanReqMessage(const QRScanReqMessage& from);
  QRScanReqMessage(QRScanReqMessage&& from) noexcept
    : QRScanReqMessage() {
    *this = ::std::move(from);
  }

  inline QRScanReqMessage& operator=(const QRScanReqMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline QRScanReqMessage& operator=(QRScanReqMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QRScanReqMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const QRScanReqMessage* internal_default_instance() {
    return reinterpret_cast<const QRScanReqMessage*>(
               &_QRScanReqMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QRScanReqMessage& a, QRScanReqMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(QRScanReqMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QRScanReqMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QRScanReqMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QRScanReqMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QRScanReqMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QRScanReqMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QRScanReqMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.QRScanReqMessage";
  }
  protected:
  explicit QRScanReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginPicFieldNumber = 1,
    kDecodePicFieldNumber = 2,
    kEncodePicDataFieldNumber = 4,
    kUnknown0FieldNumber = 3,
    kEncodePicXFieldNumber = 5,
    kEncodePicYFieldNumber = 6,
    kUnknown1FieldNumber = 7,
    kTextScanIdFieldNumber = 8,
    kUnknown3FieldNumber = 9,
  };
  // string origin_pic = 1;
  void clear_origin_pic();
  const std::string& origin_pic() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_origin_pic(ArgT0&& arg0, ArgT... args);
  std::string* mutable_origin_pic();
  PROTOBUF_NODISCARD std::string* release_origin_pic();
  void set_allocated_origin_pic(std::string* origin_pic);
  private:
  const std::string& _internal_origin_pic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_origin_pic(const std::string& value);
  std::string* _internal_mutable_origin_pic();
  public:

  // string decode_pic = 2;
  void clear_decode_pic();
  const std::string& decode_pic() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_decode_pic(ArgT0&& arg0, ArgT... args);
  std::string* mutable_decode_pic();
  PROTOBUF_NODISCARD std::string* release_decode_pic();
  void set_allocated_decode_pic(std::string* decode_pic);
  private:
  const std::string& _internal_decode_pic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decode_pic(const std::string& value);
  std::string* _internal_mutable_decode_pic();
  public:

  // bytes encode_pic_data = 4;
  void clear_encode_pic_data();
  const std::string& encode_pic_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_encode_pic_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_encode_pic_data();
  PROTOBUF_NODISCARD std::string* release_encode_pic_data();
  void set_allocated_encode_pic_data(std::string* encode_pic_data);
  private:
  const std::string& _internal_encode_pic_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encode_pic_data(const std::string& value);
  std::string* _internal_mutable_encode_pic_data();
  public:

  // int32 unknown_0 = 3;
  void clear_unknown_0();
  int32_t unknown_0() const;
  void set_unknown_0(int32_t value);
  private:
  int32_t _internal_unknown_0() const;
  void _internal_set_unknown_0(int32_t value);
  public:

  // int32 encode_pic_x = 5;
  void clear_encode_pic_x();
  int32_t encode_pic_x() const;
  void set_encode_pic_x(int32_t value);
  private:
  int32_t _internal_encode_pic_x() const;
  void _internal_set_encode_pic_x(int32_t value);
  public:

  // int32 encode_pic_y = 6;
  void clear_encode_pic_y();
  int32_t encode_pic_y() const;
  void set_encode_pic_y(int32_t value);
  private:
  int32_t _internal_encode_pic_y() const;
  void _internal_set_encode_pic_y(int32_t value);
  public:

  // int32 unknown_1 = 7;
  void clear_unknown_1();
  int32_t unknown_1() const;
  void set_unknown_1(int32_t value);
  private:
  int32_t _internal_unknown_1() const;
  void _internal_set_unknown_1(int32_t value);
  public:

  // int32 text_scan_id = 8;
  void clear_text_scan_id();
  int32_t text_scan_id() const;
  void set_text_scan_id(int32_t value);
  private:
  int32_t _internal_text_scan_id() const;
  void _internal_set_text_scan_id(int32_t value);
  public:

  // int32 unknown_3 = 9;
  void clear_unknown_3();
  int32_t unknown_3() const;
  void set_unknown_3(int32_t value);
  private:
  int32_t _internal_unknown_3() const;
  void _internal_set_unknown_3(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.QRScanReqMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr origin_pic_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr decode_pic_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encode_pic_data_;
  int32_t unknown_0_;
  int32_t encode_pic_x_;
  int32_t encode_pic_y_;
  int32_t unknown_1_;
  int32_t text_scan_id_;
  int32_t unknown_3_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class QRScanRespMessage_QRScanResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.QRScanRespMessage.QRScanResult) */ {
 public:
  inline QRScanRespMessage_QRScanResult() : QRScanRespMessage_QRScanResult(nullptr) {}
  ~QRScanRespMessage_QRScanResult() override;
  explicit PROTOBUF_CONSTEXPR QRScanRespMessage_QRScanResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QRScanRespMessage_QRScanResult(const QRScanRespMessage_QRScanResult& from);
  QRScanRespMessage_QRScanResult(QRScanRespMessage_QRScanResult&& from) noexcept
    : QRScanRespMessage_QRScanResult() {
    *this = ::std::move(from);
  }

  inline QRScanRespMessage_QRScanResult& operator=(const QRScanRespMessage_QRScanResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QRScanRespMessage_QRScanResult& operator=(QRScanRespMessage_QRScanResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QRScanRespMessage_QRScanResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QRScanRespMessage_QRScanResult* internal_default_instance() {
    return reinterpret_cast<const QRScanRespMessage_QRScanResult*>(
               &_QRScanRespMessage_QRScanResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(QRScanRespMessage_QRScanResult& a, QRScanRespMessage_QRScanResult& b) {
    a.Swap(&b);
  }
  inline void Swap(QRScanRespMessage_QRScanResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QRScanRespMessage_QRScanResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QRScanRespMessage_QRScanResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QRScanRespMessage_QRScanResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QRScanRespMessage_QRScanResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QRScanRespMessage_QRScanResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QRScanRespMessage_QRScanResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.QRScanRespMessage.QRScanResult";
  }
  protected:
  explicit QRScanRespMessage_QRScanResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kUnknown1FieldNumber = 3,
    kUnknow0FieldNumber = 2,
    kUnknown3FieldNumber = 5,
    kUnknown2FieldNumber = 4,
  };
  // bytes result = 1;
  void clear_result();
  const std::string& result() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_result(ArgT0&& arg0, ArgT... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* result);
  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(const std::string& value);
  std::string* _internal_mutable_result();
  public:

  // double unknown_1 = 3;
  void clear_unknown_1();
  double unknown_1() const;
  void set_unknown_1(double value);
  private:
  double _internal_unknown_1() const;
  void _internal_set_unknown_1(double value);
  public:

  // int32 unknow_0 = 2;
  void clear_unknow_0();
  int32_t unknow_0() const;
  void set_unknow_0(int32_t value);
  private:
  int32_t _internal_unknow_0() const;
  void _internal_set_unknow_0(int32_t value);
  public:

  // int32 unknown_3 = 5;
  void clear_unknown_3();
  int32_t unknown_3() const;
  void set_unknown_3(int32_t value);
  private:
  int32_t _internal_unknown_3() const;
  void _internal_set_unknown_3(int32_t value);
  public:

  // double unknown_2 = 4;
  void clear_unknown_2();
  double unknown_2() const;
  void set_unknown_2(double value);
  private:
  double _internal_unknown_2() const;
  void _internal_set_unknown_2(double value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.QRScanRespMessage.QRScanResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_;
  double unknown_1_;
  int32_t unknow_0_;
  int32_t unknown_3_;
  double unknown_2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class QRScanRespMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_protobuf.QRScanRespMessage) */ {
 public:
  inline QRScanRespMessage() : QRScanRespMessage(nullptr) {}
  ~QRScanRespMessage() override;
  explicit PROTOBUF_CONSTEXPR QRScanRespMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QRScanRespMessage(const QRScanRespMessage& from);
  QRScanRespMessage(QRScanRespMessage&& from) noexcept
    : QRScanRespMessage() {
    *this = ::std::move(from);
  }

  inline QRScanRespMessage& operator=(const QRScanRespMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline QRScanRespMessage& operator=(QRScanRespMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QRScanRespMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const QRScanRespMessage* internal_default_instance() {
    return reinterpret_cast<const QRScanRespMessage*>(
               &_QRScanRespMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(QRScanRespMessage& a, QRScanRespMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(QRScanRespMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QRScanRespMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QRScanRespMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QRScanRespMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QRScanRespMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QRScanRespMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QRScanRespMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_protobuf.QRScanRespMessage";
  }
  protected:
  explicit QRScanRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QRScanRespMessage_QRScanResult QRScanResult;

  // accessors -------------------------------------------------------

  enum : int {
    kQrResultFieldNumber = 1,
    kUnknown0FieldNumber = 2,
  };
  // repeated .utility_protobuf.QRScanRespMessage.QRScanResult qr_result = 1;
  int qr_result_size() const;
  private:
  int _internal_qr_result_size() const;
  public:
  void clear_qr_result();
  ::utility_protobuf::QRScanRespMessage_QRScanResult* mutable_qr_result(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::utility_protobuf::QRScanRespMessage_QRScanResult >*
      mutable_qr_result();
  private:
  const ::utility_protobuf::QRScanRespMessage_QRScanResult& _internal_qr_result(int index) const;
  ::utility_protobuf::QRScanRespMessage_QRScanResult* _internal_add_qr_result();
  public:
  const ::utility_protobuf::QRScanRespMessage_QRScanResult& qr_result(int index) const;
  ::utility_protobuf::QRScanRespMessage_QRScanResult* add_qr_result();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::utility_protobuf::QRScanRespMessage_QRScanResult >&
      qr_result() const;

  // int32 unknown_0 = 2;
  void clear_unknown_0();
  int32_t unknown_0() const;
  void set_unknown_0(int32_t value);
  private:
  int32_t _internal_unknown_0() const;
  void _internal_set_unknown_0(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:utility_protobuf.QRScanRespMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::utility_protobuf::QRScanRespMessage_QRScanResult > qr_result_;
  int32_t unknown_0_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_utility_5fprotobuf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InitReqMessage

// int32 expire_timestamp = 1;
inline void InitReqMessage::clear_expire_timestamp() {
  expire_timestamp_ = 0;
}
inline int32_t InitReqMessage::_internal_expire_timestamp() const {
  return expire_timestamp_;
}
inline int32_t InitReqMessage::expire_timestamp() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.InitReqMessage.expire_timestamp)
  return _internal_expire_timestamp();
}
inline void InitReqMessage::_internal_set_expire_timestamp(int32_t value) {
  
  expire_timestamp_ = value;
}
inline void InitReqMessage::set_expire_timestamp(int32_t value) {
  _internal_set_expire_timestamp(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.InitReqMessage.expire_timestamp)
}

// int32 type = 2;
inline void InitReqMessage::clear_type() {
  type_ = 0;
}
inline int32_t InitReqMessage::_internal_type() const {
  return type_;
}
inline int32_t InitReqMessage::type() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.InitReqMessage.type)
  return _internal_type();
}
inline void InitReqMessage::_internal_set_type(int32_t value) {
  
  type_ = value;
}
inline void InitReqMessage::set_type(int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.InitReqMessage.type)
}

// -------------------------------------------------------------------

// InitRespMessage

// int32 status = 1;
inline void InitRespMessage::clear_status() {
  status_ = 0;
}
inline int32_t InitRespMessage::_internal_status() const {
  return status_;
}
inline int32_t InitRespMessage::status() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.InitRespMessage.status)
  return _internal_status();
}
inline void InitRespMessage::_internal_set_status(int32_t value) {
  
  status_ = value;
}
inline void InitRespMessage::set_status(int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.InitRespMessage.status)
}

// -------------------------------------------------------------------

// ResampleImageReqMessage

// string decode_pic = 1;
inline void ResampleImageReqMessage::clear_decode_pic() {
  decode_pic_.ClearToEmpty();
}
inline const std::string& ResampleImageReqMessage::decode_pic() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageReqMessage.decode_pic)
  return _internal_decode_pic();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ResampleImageReqMessage::set_decode_pic(ArgT0&& arg0, ArgT... args) {
 
 decode_pic_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageReqMessage.decode_pic)
}
inline std::string* ResampleImageReqMessage::mutable_decode_pic() {
  std::string* _s = _internal_mutable_decode_pic();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.ResampleImageReqMessage.decode_pic)
  return _s;
}
inline const std::string& ResampleImageReqMessage::_internal_decode_pic() const {
  return decode_pic_.Get();
}
inline void ResampleImageReqMessage::_internal_set_decode_pic(const std::string& value) {
  
  decode_pic_.Set(value, GetArenaForAllocation());
}
inline std::string* ResampleImageReqMessage::_internal_mutable_decode_pic() {
  
  return decode_pic_.Mutable(GetArenaForAllocation());
}
inline std::string* ResampleImageReqMessage::release_decode_pic() {
  // @@protoc_insertion_point(field_release:utility_protobuf.ResampleImageReqMessage.decode_pic)
  return decode_pic_.Release();
}
inline void ResampleImageReqMessage::set_allocated_decode_pic(std::string* decode_pic) {
  if (decode_pic != nullptr) {
    
  } else {
    
  }
  decode_pic_.SetAllocated(decode_pic, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (decode_pic_.IsDefault()) {
    decode_pic_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.ResampleImageReqMessage.decode_pic)
}

// string encode_pic = 2;
inline void ResampleImageReqMessage::clear_encode_pic() {
  encode_pic_.ClearToEmpty();
}
inline const std::string& ResampleImageReqMessage::encode_pic() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageReqMessage.encode_pic)
  return _internal_encode_pic();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ResampleImageReqMessage::set_encode_pic(ArgT0&& arg0, ArgT... args) {
 
 encode_pic_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageReqMessage.encode_pic)
}
inline std::string* ResampleImageReqMessage::mutable_encode_pic() {
  std::string* _s = _internal_mutable_encode_pic();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.ResampleImageReqMessage.encode_pic)
  return _s;
}
inline const std::string& ResampleImageReqMessage::_internal_encode_pic() const {
  return encode_pic_.Get();
}
inline void ResampleImageReqMessage::_internal_set_encode_pic(const std::string& value) {
  
  encode_pic_.Set(value, GetArenaForAllocation());
}
inline std::string* ResampleImageReqMessage::_internal_mutable_encode_pic() {
  
  return encode_pic_.Mutable(GetArenaForAllocation());
}
inline std::string* ResampleImageReqMessage::release_encode_pic() {
  // @@protoc_insertion_point(field_release:utility_protobuf.ResampleImageReqMessage.encode_pic)
  return encode_pic_.Release();
}
inline void ResampleImageReqMessage::set_allocated_encode_pic(std::string* encode_pic) {
  if (encode_pic != nullptr) {
    
  } else {
    
  }
  encode_pic_.SetAllocated(encode_pic, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (encode_pic_.IsDefault()) {
    encode_pic_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.ResampleImageReqMessage.encode_pic)
}

// int32 re_pic_x = 3;
inline void ResampleImageReqMessage::clear_re_pic_x() {
  re_pic_x_ = 0;
}
inline int32_t ResampleImageReqMessage::_internal_re_pic_x() const {
  return re_pic_x_;
}
inline int32_t ResampleImageReqMessage::re_pic_x() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageReqMessage.re_pic_x)
  return _internal_re_pic_x();
}
inline void ResampleImageReqMessage::_internal_set_re_pic_x(int32_t value) {
  
  re_pic_x_ = value;
}
inline void ResampleImageReqMessage::set_re_pic_x(int32_t value) {
  _internal_set_re_pic_x(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageReqMessage.re_pic_x)
}

// int32 re_pic_y = 4;
inline void ResampleImageReqMessage::clear_re_pic_y() {
  re_pic_y_ = 0;
}
inline int32_t ResampleImageReqMessage::_internal_re_pic_y() const {
  return re_pic_y_;
}
inline int32_t ResampleImageReqMessage::re_pic_y() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageReqMessage.re_pic_y)
  return _internal_re_pic_y();
}
inline void ResampleImageReqMessage::_internal_set_re_pic_y(int32_t value) {
  
  re_pic_y_ = value;
}
inline void ResampleImageReqMessage::set_re_pic_y(int32_t value) {
  _internal_set_re_pic_y(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageReqMessage.re_pic_y)
}

// int32 unknown_0 = 5;
inline void ResampleImageReqMessage::clear_unknown_0() {
  unknown_0_ = 0;
}
inline int32_t ResampleImageReqMessage::_internal_unknown_0() const {
  return unknown_0_;
}
inline int32_t ResampleImageReqMessage::unknown_0() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageReqMessage.unknown_0)
  return _internal_unknown_0();
}
inline void ResampleImageReqMessage::_internal_set_unknown_0(int32_t value) {
  
  unknown_0_ = value;
}
inline void ResampleImageReqMessage::set_unknown_0(int32_t value) {
  _internal_set_unknown_0(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageReqMessage.unknown_0)
}

// -------------------------------------------------------------------

// ResampleImageRespMessage

// int32 err_code = 1;
inline void ResampleImageRespMessage::clear_err_code() {
  err_code_ = 0;
}
inline int32_t ResampleImageRespMessage::_internal_err_code() const {
  return err_code_;
}
inline int32_t ResampleImageRespMessage::err_code() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.ResampleImageRespMessage.err_code)
  return _internal_err_code();
}
inline void ResampleImageRespMessage::_internal_set_err_code(int32_t value) {
  
  err_code_ = value;
}
inline void ResampleImageRespMessage::set_err_code(int32_t value) {
  _internal_set_err_code(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.ResampleImageRespMessage.err_code)
}

// -------------------------------------------------------------------

// TextScanMessage

// int32 text_scan_id = 1;
inline void TextScanMessage::clear_text_scan_id() {
  text_scan_id_ = 0;
}
inline int32_t TextScanMessage::_internal_text_scan_id() const {
  return text_scan_id_;
}
inline int32_t TextScanMessage::text_scan_id() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.TextScanMessage.text_scan_id)
  return _internal_text_scan_id();
}
inline void TextScanMessage::_internal_set_text_scan_id(int32_t value) {
  
  text_scan_id_ = value;
}
inline void TextScanMessage::set_text_scan_id(int32_t value) {
  _internal_set_text_scan_id(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.TextScanMessage.text_scan_id)
}

// string pic_path = 2;
inline void TextScanMessage::clear_pic_path() {
  pic_path_.ClearToEmpty();
}
inline const std::string& TextScanMessage::pic_path() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.TextScanMessage.pic_path)
  return _internal_pic_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TextScanMessage::set_pic_path(ArgT0&& arg0, ArgT... args) {
 
 pic_path_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.TextScanMessage.pic_path)
}
inline std::string* TextScanMessage::mutable_pic_path() {
  std::string* _s = _internal_mutable_pic_path();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.TextScanMessage.pic_path)
  return _s;
}
inline const std::string& TextScanMessage::_internal_pic_path() const {
  return pic_path_.Get();
}
inline void TextScanMessage::_internal_set_pic_path(const std::string& value) {
  
  pic_path_.Set(value, GetArenaForAllocation());
}
inline std::string* TextScanMessage::_internal_mutable_pic_path() {
  
  return pic_path_.Mutable(GetArenaForAllocation());
}
inline std::string* TextScanMessage::release_pic_path() {
  // @@protoc_insertion_point(field_release:utility_protobuf.TextScanMessage.pic_path)
  return pic_path_.Release();
}
inline void TextScanMessage::set_allocated_pic_path(std::string* pic_path) {
  if (pic_path != nullptr) {
    
  } else {
    
  }
  pic_path_.SetAllocated(pic_path, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (pic_path_.IsDefault()) {
    pic_path_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.TextScanMessage.pic_path)
}

// int32 have_text = 3;
inline void TextScanMessage::clear_have_text() {
  have_text_ = 0;
}
inline int32_t TextScanMessage::_internal_have_text() const {
  return have_text_;
}
inline int32_t TextScanMessage::have_text() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.TextScanMessage.have_text)
  return _internal_have_text();
}
inline void TextScanMessage::_internal_set_have_text(int32_t value) {
  
  have_text_ = value;
}
inline void TextScanMessage::set_have_text(int32_t value) {
  _internal_set_have_text(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.TextScanMessage.have_text)
}

// int32 unknown_0 = 4;
inline void TextScanMessage::clear_unknown_0() {
  unknown_0_ = 0;
}
inline int32_t TextScanMessage::_internal_unknown_0() const {
  return unknown_0_;
}
inline int32_t TextScanMessage::unknown_0() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.TextScanMessage.unknown_0)
  return _internal_unknown_0();
}
inline void TextScanMessage::_internal_set_unknown_0(int32_t value) {
  
  unknown_0_ = value;
}
inline void TextScanMessage::set_unknown_0(int32_t value) {
  _internal_set_unknown_0(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.TextScanMessage.unknown_0)
}

// float rate = 5;
inline void TextScanMessage::clear_rate() {
  rate_ = 0;
}
inline float TextScanMessage::_internal_rate() const {
  return rate_;
}
inline float TextScanMessage::rate() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.TextScanMessage.rate)
  return _internal_rate();
}
inline void TextScanMessage::_internal_set_rate(float value) {
  
  rate_ = value;
}
inline void TextScanMessage::set_rate(float value) {
  _internal_set_rate(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.TextScanMessage.rate)
}

// -------------------------------------------------------------------

// QRScanReqMessage

// string origin_pic = 1;
inline void QRScanReqMessage::clear_origin_pic() {
  origin_pic_.ClearToEmpty();
}
inline const std::string& QRScanReqMessage::origin_pic() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.origin_pic)
  return _internal_origin_pic();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void QRScanReqMessage::set_origin_pic(ArgT0&& arg0, ArgT... args) {
 
 origin_pic_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.origin_pic)
}
inline std::string* QRScanReqMessage::mutable_origin_pic() {
  std::string* _s = _internal_mutable_origin_pic();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.QRScanReqMessage.origin_pic)
  return _s;
}
inline const std::string& QRScanReqMessage::_internal_origin_pic() const {
  return origin_pic_.Get();
}
inline void QRScanReqMessage::_internal_set_origin_pic(const std::string& value) {
  
  origin_pic_.Set(value, GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::_internal_mutable_origin_pic() {
  
  return origin_pic_.Mutable(GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::release_origin_pic() {
  // @@protoc_insertion_point(field_release:utility_protobuf.QRScanReqMessage.origin_pic)
  return origin_pic_.Release();
}
inline void QRScanReqMessage::set_allocated_origin_pic(std::string* origin_pic) {
  if (origin_pic != nullptr) {
    
  } else {
    
  }
  origin_pic_.SetAllocated(origin_pic, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (origin_pic_.IsDefault()) {
    origin_pic_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.QRScanReqMessage.origin_pic)
}

// string decode_pic = 2;
inline void QRScanReqMessage::clear_decode_pic() {
  decode_pic_.ClearToEmpty();
}
inline const std::string& QRScanReqMessage::decode_pic() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.decode_pic)
  return _internal_decode_pic();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void QRScanReqMessage::set_decode_pic(ArgT0&& arg0, ArgT... args) {
 
 decode_pic_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.decode_pic)
}
inline std::string* QRScanReqMessage::mutable_decode_pic() {
  std::string* _s = _internal_mutable_decode_pic();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.QRScanReqMessage.decode_pic)
  return _s;
}
inline const std::string& QRScanReqMessage::_internal_decode_pic() const {
  return decode_pic_.Get();
}
inline void QRScanReqMessage::_internal_set_decode_pic(const std::string& value) {
  
  decode_pic_.Set(value, GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::_internal_mutable_decode_pic() {
  
  return decode_pic_.Mutable(GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::release_decode_pic() {
  // @@protoc_insertion_point(field_release:utility_protobuf.QRScanReqMessage.decode_pic)
  return decode_pic_.Release();
}
inline void QRScanReqMessage::set_allocated_decode_pic(std::string* decode_pic) {
  if (decode_pic != nullptr) {
    
  } else {
    
  }
  decode_pic_.SetAllocated(decode_pic, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (decode_pic_.IsDefault()) {
    decode_pic_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.QRScanReqMessage.decode_pic)
}

// int32 unknown_0 = 3;
inline void QRScanReqMessage::clear_unknown_0() {
  unknown_0_ = 0;
}
inline int32_t QRScanReqMessage::_internal_unknown_0() const {
  return unknown_0_;
}
inline int32_t QRScanReqMessage::unknown_0() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.unknown_0)
  return _internal_unknown_0();
}
inline void QRScanReqMessage::_internal_set_unknown_0(int32_t value) {
  
  unknown_0_ = value;
}
inline void QRScanReqMessage::set_unknown_0(int32_t value) {
  _internal_set_unknown_0(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.unknown_0)
}

// bytes encode_pic_data = 4;
inline void QRScanReqMessage::clear_encode_pic_data() {
  encode_pic_data_.ClearToEmpty();
}
inline const std::string& QRScanReqMessage::encode_pic_data() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.encode_pic_data)
  return _internal_encode_pic_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void QRScanReqMessage::set_encode_pic_data(ArgT0&& arg0, ArgT... args) {
 
 encode_pic_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.encode_pic_data)
}
inline std::string* QRScanReqMessage::mutable_encode_pic_data() {
  std::string* _s = _internal_mutable_encode_pic_data();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.QRScanReqMessage.encode_pic_data)
  return _s;
}
inline const std::string& QRScanReqMessage::_internal_encode_pic_data() const {
  return encode_pic_data_.Get();
}
inline void QRScanReqMessage::_internal_set_encode_pic_data(const std::string& value) {
  
  encode_pic_data_.Set(value, GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::_internal_mutable_encode_pic_data() {
  
  return encode_pic_data_.Mutable(GetArenaForAllocation());
}
inline std::string* QRScanReqMessage::release_encode_pic_data() {
  // @@protoc_insertion_point(field_release:utility_protobuf.QRScanReqMessage.encode_pic_data)
  return encode_pic_data_.Release();
}
inline void QRScanReqMessage::set_allocated_encode_pic_data(std::string* encode_pic_data) {
  if (encode_pic_data != nullptr) {
    
  } else {
    
  }
  encode_pic_data_.SetAllocated(encode_pic_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (encode_pic_data_.IsDefault()) {
    encode_pic_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.QRScanReqMessage.encode_pic_data)
}

// int32 encode_pic_x = 5;
inline void QRScanReqMessage::clear_encode_pic_x() {
  encode_pic_x_ = 0;
}
inline int32_t QRScanReqMessage::_internal_encode_pic_x() const {
  return encode_pic_x_;
}
inline int32_t QRScanReqMessage::encode_pic_x() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.encode_pic_x)
  return _internal_encode_pic_x();
}
inline void QRScanReqMessage::_internal_set_encode_pic_x(int32_t value) {
  
  encode_pic_x_ = value;
}
inline void QRScanReqMessage::set_encode_pic_x(int32_t value) {
  _internal_set_encode_pic_x(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.encode_pic_x)
}

// int32 encode_pic_y = 6;
inline void QRScanReqMessage::clear_encode_pic_y() {
  encode_pic_y_ = 0;
}
inline int32_t QRScanReqMessage::_internal_encode_pic_y() const {
  return encode_pic_y_;
}
inline int32_t QRScanReqMessage::encode_pic_y() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.encode_pic_y)
  return _internal_encode_pic_y();
}
inline void QRScanReqMessage::_internal_set_encode_pic_y(int32_t value) {
  
  encode_pic_y_ = value;
}
inline void QRScanReqMessage::set_encode_pic_y(int32_t value) {
  _internal_set_encode_pic_y(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.encode_pic_y)
}

// int32 unknown_1 = 7;
inline void QRScanReqMessage::clear_unknown_1() {
  unknown_1_ = 0;
}
inline int32_t QRScanReqMessage::_internal_unknown_1() const {
  return unknown_1_;
}
inline int32_t QRScanReqMessage::unknown_1() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.unknown_1)
  return _internal_unknown_1();
}
inline void QRScanReqMessage::_internal_set_unknown_1(int32_t value) {
  
  unknown_1_ = value;
}
inline void QRScanReqMessage::set_unknown_1(int32_t value) {
  _internal_set_unknown_1(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.unknown_1)
}

// int32 text_scan_id = 8;
inline void QRScanReqMessage::clear_text_scan_id() {
  text_scan_id_ = 0;
}
inline int32_t QRScanReqMessage::_internal_text_scan_id() const {
  return text_scan_id_;
}
inline int32_t QRScanReqMessage::text_scan_id() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.text_scan_id)
  return _internal_text_scan_id();
}
inline void QRScanReqMessage::_internal_set_text_scan_id(int32_t value) {
  
  text_scan_id_ = value;
}
inline void QRScanReqMessage::set_text_scan_id(int32_t value) {
  _internal_set_text_scan_id(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.text_scan_id)
}

// int32 unknown_3 = 9;
inline void QRScanReqMessage::clear_unknown_3() {
  unknown_3_ = 0;
}
inline int32_t QRScanReqMessage::_internal_unknown_3() const {
  return unknown_3_;
}
inline int32_t QRScanReqMessage::unknown_3() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanReqMessage.unknown_3)
  return _internal_unknown_3();
}
inline void QRScanReqMessage::_internal_set_unknown_3(int32_t value) {
  
  unknown_3_ = value;
}
inline void QRScanReqMessage::set_unknown_3(int32_t value) {
  _internal_set_unknown_3(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanReqMessage.unknown_3)
}

// -------------------------------------------------------------------

// QRScanRespMessage_QRScanResult

// bytes result = 1;
inline void QRScanRespMessage_QRScanResult::clear_result() {
  result_.ClearToEmpty();
}
inline const std::string& QRScanRespMessage_QRScanResult::result() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.QRScanResult.result)
  return _internal_result();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void QRScanRespMessage_QRScanResult::set_result(ArgT0&& arg0, ArgT... args) {
 
 result_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.QRScanResult.result)
}
inline std::string* QRScanRespMessage_QRScanResult::mutable_result() {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:utility_protobuf.QRScanRespMessage.QRScanResult.result)
  return _s;
}
inline const std::string& QRScanRespMessage_QRScanResult::_internal_result() const {
  return result_.Get();
}
inline void QRScanRespMessage_QRScanResult::_internal_set_result(const std::string& value) {
  
  result_.Set(value, GetArenaForAllocation());
}
inline std::string* QRScanRespMessage_QRScanResult::_internal_mutable_result() {
  
  return result_.Mutable(GetArenaForAllocation());
}
inline std::string* QRScanRespMessage_QRScanResult::release_result() {
  // @@protoc_insertion_point(field_release:utility_protobuf.QRScanRespMessage.QRScanResult.result)
  return result_.Release();
}
inline void QRScanRespMessage_QRScanResult::set_allocated_result(std::string* result) {
  if (result != nullptr) {
    
  } else {
    
  }
  result_.SetAllocated(result, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (result_.IsDefault()) {
    result_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:utility_protobuf.QRScanRespMessage.QRScanResult.result)
}

// int32 unknow_0 = 2;
inline void QRScanRespMessage_QRScanResult::clear_unknow_0() {
  unknow_0_ = 0;
}
inline int32_t QRScanRespMessage_QRScanResult::_internal_unknow_0() const {
  return unknow_0_;
}
inline int32_t QRScanRespMessage_QRScanResult::unknow_0() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.QRScanResult.unknow_0)
  return _internal_unknow_0();
}
inline void QRScanRespMessage_QRScanResult::_internal_set_unknow_0(int32_t value) {
  
  unknow_0_ = value;
}
inline void QRScanRespMessage_QRScanResult::set_unknow_0(int32_t value) {
  _internal_set_unknow_0(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.QRScanResult.unknow_0)
}

// double unknown_1 = 3;
inline void QRScanRespMessage_QRScanResult::clear_unknown_1() {
  unknown_1_ = 0;
}
inline double QRScanRespMessage_QRScanResult::_internal_unknown_1() const {
  return unknown_1_;
}
inline double QRScanRespMessage_QRScanResult::unknown_1() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_1)
  return _internal_unknown_1();
}
inline void QRScanRespMessage_QRScanResult::_internal_set_unknown_1(double value) {
  
  unknown_1_ = value;
}
inline void QRScanRespMessage_QRScanResult::set_unknown_1(double value) {
  _internal_set_unknown_1(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_1)
}

// double unknown_2 = 4;
inline void QRScanRespMessage_QRScanResult::clear_unknown_2() {
  unknown_2_ = 0;
}
inline double QRScanRespMessage_QRScanResult::_internal_unknown_2() const {
  return unknown_2_;
}
inline double QRScanRespMessage_QRScanResult::unknown_2() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_2)
  return _internal_unknown_2();
}
inline void QRScanRespMessage_QRScanResult::_internal_set_unknown_2(double value) {
  
  unknown_2_ = value;
}
inline void QRScanRespMessage_QRScanResult::set_unknown_2(double value) {
  _internal_set_unknown_2(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_2)
}

// int32 unknown_3 = 5;
inline void QRScanRespMessage_QRScanResult::clear_unknown_3() {
  unknown_3_ = 0;
}
inline int32_t QRScanRespMessage_QRScanResult::_internal_unknown_3() const {
  return unknown_3_;
}
inline int32_t QRScanRespMessage_QRScanResult::unknown_3() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_3)
  return _internal_unknown_3();
}
inline void QRScanRespMessage_QRScanResult::_internal_set_unknown_3(int32_t value) {
  
  unknown_3_ = value;
}
inline void QRScanRespMessage_QRScanResult::set_unknown_3(int32_t value) {
  _internal_set_unknown_3(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.QRScanResult.unknown_3)
}

// -------------------------------------------------------------------

// QRScanRespMessage

// repeated .utility_protobuf.QRScanRespMessage.QRScanResult qr_result = 1;
inline int QRScanRespMessage::_internal_qr_result_size() const {
  return qr_result_.size();
}
inline int QRScanRespMessage::qr_result_size() const {
  return _internal_qr_result_size();
}
inline void QRScanRespMessage::clear_qr_result() {
  qr_result_.Clear();
}
inline ::utility_protobuf::QRScanRespMessage_QRScanResult* QRScanRespMessage::mutable_qr_result(int index) {
  // @@protoc_insertion_point(field_mutable:utility_protobuf.QRScanRespMessage.qr_result)
  return qr_result_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::utility_protobuf::QRScanRespMessage_QRScanResult >*
QRScanRespMessage::mutable_qr_result() {
  // @@protoc_insertion_point(field_mutable_list:utility_protobuf.QRScanRespMessage.qr_result)
  return &qr_result_;
}
inline const ::utility_protobuf::QRScanRespMessage_QRScanResult& QRScanRespMessage::_internal_qr_result(int index) const {
  return qr_result_.Get(index);
}
inline const ::utility_protobuf::QRScanRespMessage_QRScanResult& QRScanRespMessage::qr_result(int index) const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.qr_result)
  return _internal_qr_result(index);
}
inline ::utility_protobuf::QRScanRespMessage_QRScanResult* QRScanRespMessage::_internal_add_qr_result() {
  return qr_result_.Add();
}
inline ::utility_protobuf::QRScanRespMessage_QRScanResult* QRScanRespMessage::add_qr_result() {
  ::utility_protobuf::QRScanRespMessage_QRScanResult* _add = _internal_add_qr_result();
  // @@protoc_insertion_point(field_add:utility_protobuf.QRScanRespMessage.qr_result)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::utility_protobuf::QRScanRespMessage_QRScanResult >&
QRScanRespMessage::qr_result() const {
  // @@protoc_insertion_point(field_list:utility_protobuf.QRScanRespMessage.qr_result)
  return qr_result_;
}

// int32 unknown_0 = 2;
inline void QRScanRespMessage::clear_unknown_0() {
  unknown_0_ = 0;
}
inline int32_t QRScanRespMessage::_internal_unknown_0() const {
  return unknown_0_;
}
inline int32_t QRScanRespMessage::unknown_0() const {
  // @@protoc_insertion_point(field_get:utility_protobuf.QRScanRespMessage.unknown_0)
  return _internal_unknown_0();
}
inline void QRScanRespMessage::_internal_set_unknown_0(int32_t value) {
  
  unknown_0_ = value;
}
inline void QRScanRespMessage::set_unknown_0(int32_t value) {
  _internal_set_unknown_0(value);
  // @@protoc_insertion_point(field_set:utility_protobuf.QRScanRespMessage.unknown_0)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace utility_protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_utility_5fprotobuf_2eproto
