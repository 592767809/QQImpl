// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: utility_protobuf.proto

#include "utility_protobuf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace utility_protobuf {
PROTOBUF_CONSTEXPR InitReqMessage::InitReqMessage(
    ::_pbi::ConstantInitialized)
  : expire_timestamp_(0)
  , type_(0){}
struct InitReqMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitReqMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitReqMessageDefaultTypeInternal() {}
  union {
    InitReqMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitReqMessageDefaultTypeInternal _InitReqMessage_default_instance_;
PROTOBUF_CONSTEXPR InitRespMessage::InitRespMessage(
    ::_pbi::ConstantInitialized)
  : status_(0){}
struct InitRespMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitRespMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitRespMessageDefaultTypeInternal() {}
  union {
    InitRespMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitRespMessageDefaultTypeInternal _InitRespMessage_default_instance_;
PROTOBUF_CONSTEXPR ResampleImageReqMessage::ResampleImageReqMessage(
    ::_pbi::ConstantInitialized)
  : decode_pic_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , encode_pic_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , re_pic_x_(0)
  , re_pic_y_(0)
  , unknown_0_(0){}
struct ResampleImageReqMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResampleImageReqMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResampleImageReqMessageDefaultTypeInternal() {}
  union {
    ResampleImageReqMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResampleImageReqMessageDefaultTypeInternal _ResampleImageReqMessage_default_instance_;
PROTOBUF_CONSTEXPR ResampleImageRespMessage::ResampleImageRespMessage(
    ::_pbi::ConstantInitialized)
  : err_code_(0){}
struct ResampleImageRespMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResampleImageRespMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResampleImageRespMessageDefaultTypeInternal() {}
  union {
    ResampleImageRespMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResampleImageRespMessageDefaultTypeInternal _ResampleImageRespMessage_default_instance_;
PROTOBUF_CONSTEXPR TextScanMessage::TextScanMessage(
    ::_pbi::ConstantInitialized)
  : pic_path_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , text_scan_id_(0)
  , have_text_(0)
  , unknown_0_(0)
  , rate_(0){}
struct TextScanMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextScanMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextScanMessageDefaultTypeInternal() {}
  union {
    TextScanMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextScanMessageDefaultTypeInternal _TextScanMessage_default_instance_;
PROTOBUF_CONSTEXPR QRScanReqMessage::QRScanReqMessage(
    ::_pbi::ConstantInitialized)
  : origin_pic_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , decode_pic_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , encode_pic_data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , unknown_0_(0)
  , encode_pic_x_(0)
  , encode_pic_y_(0)
  , unknown_1_(0)
  , text_scan_id_(0)
  , unknown_3_(0){}
struct QRScanReqMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QRScanReqMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QRScanReqMessageDefaultTypeInternal() {}
  union {
    QRScanReqMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QRScanReqMessageDefaultTypeInternal _QRScanReqMessage_default_instance_;
PROTOBUF_CONSTEXPR QRScanRespMessage_QRScanResult::QRScanRespMessage_QRScanResult(
    ::_pbi::ConstantInitialized)
  : result_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , unknown_1_(0)
  , unknow_0_(0)
  , unknown_3_(0)
  , unknown_2_(0){}
struct QRScanRespMessage_QRScanResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QRScanRespMessage_QRScanResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QRScanRespMessage_QRScanResultDefaultTypeInternal() {}
  union {
    QRScanRespMessage_QRScanResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QRScanRespMessage_QRScanResultDefaultTypeInternal _QRScanRespMessage_QRScanResult_default_instance_;
PROTOBUF_CONSTEXPR QRScanRespMessage::QRScanRespMessage(
    ::_pbi::ConstantInitialized)
  : qr_result_()
  , unknown_0_(0){}
struct QRScanRespMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QRScanRespMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QRScanRespMessageDefaultTypeInternal() {}
  union {
    QRScanRespMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QRScanRespMessageDefaultTypeInternal _QRScanRespMessage_default_instance_;
}  // namespace utility_protobuf
static ::_pb::Metadata file_level_metadata_utility_5fprotobuf_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_utility_5fprotobuf_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_utility_5fprotobuf_2eproto = nullptr;

const uint32_t TableStruct_utility_5fprotobuf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::InitReqMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::InitReqMessage, expire_timestamp_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::InitReqMessage, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::InitRespMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::InitRespMessage, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, decode_pic_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, encode_pic_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, re_pic_x_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, re_pic_y_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageReqMessage, unknown_0_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageRespMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::ResampleImageRespMessage, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, text_scan_id_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, pic_path_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, have_text_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, unknown_0_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::TextScanMessage, rate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, origin_pic_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, decode_pic_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, unknown_0_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, encode_pic_data_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, encode_pic_x_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, encode_pic_y_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, unknown_1_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, text_scan_id_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanReqMessage, unknown_3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, result_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, unknow_0_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, unknown_1_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, unknown_2_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage_QRScanResult, unknown_3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage, qr_result_),
  PROTOBUF_FIELD_OFFSET(::utility_protobuf::QRScanRespMessage, unknown_0_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::utility_protobuf::InitReqMessage)},
  { 8, -1, -1, sizeof(::utility_protobuf::InitRespMessage)},
  { 15, -1, -1, sizeof(::utility_protobuf::ResampleImageReqMessage)},
  { 26, -1, -1, sizeof(::utility_protobuf::ResampleImageRespMessage)},
  { 33, -1, -1, sizeof(::utility_protobuf::TextScanMessage)},
  { 44, -1, -1, sizeof(::utility_protobuf::QRScanReqMessage)},
  { 59, -1, -1, sizeof(::utility_protobuf::QRScanRespMessage_QRScanResult)},
  { 70, -1, -1, sizeof(::utility_protobuf::QRScanRespMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::utility_protobuf::_InitReqMessage_default_instance_._instance,
  &::utility_protobuf::_InitRespMessage_default_instance_._instance,
  &::utility_protobuf::_ResampleImageReqMessage_default_instance_._instance,
  &::utility_protobuf::_ResampleImageRespMessage_default_instance_._instance,
  &::utility_protobuf::_TextScanMessage_default_instance_._instance,
  &::utility_protobuf::_QRScanReqMessage_default_instance_._instance,
  &::utility_protobuf::_QRScanRespMessage_QRScanResult_default_instance_._instance,
  &::utility_protobuf::_QRScanRespMessage_default_instance_._instance,
};

const char descriptor_table_protodef_utility_5fprotobuf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026utility_protobuf.proto\022\020utility_protob"
  "uf\"8\n\016InitReqMessage\022\030\n\020expire_timestamp"
  "\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\"!\n\017InitRespMessage\022"
  "\016\n\006status\030\001 \001(\005\"x\n\027ResampleImageReqMessa"
  "ge\022\022\n\ndecode_pic\030\001 \001(\t\022\022\n\nencode_pic\030\002 \001"
  "(\t\022\020\n\010re_pic_x\030\003 \001(\005\022\020\n\010re_pic_y\030\004 \001(\005\022\021"
  "\n\tunknown_0\030\005 \001(\005\",\n\030ResampleImageRespMe"
  "ssage\022\020\n\010err_code\030\001 \001(\005\"m\n\017TextScanMessa"
  "ge\022\024\n\014text_scan_id\030\001 \001(\005\022\020\n\010pic_path\030\002 \001"
  "(\t\022\021\n\thave_text\030\003 \001(\005\022\021\n\tunknown_0\030\004 \001(\005"
  "\022\014\n\004rate\030\005 \001(\002\"\316\001\n\020QRScanReqMessage\022\022\n\no"
  "rigin_pic\030\001 \001(\t\022\022\n\ndecode_pic\030\002 \001(\t\022\021\n\tu"
  "nknown_0\030\003 \001(\005\022\027\n\017encode_pic_data\030\004 \001(\014\022"
  "\024\n\014encode_pic_x\030\005 \001(\005\022\024\n\014encode_pic_y\030\006 "
  "\001(\005\022\021\n\tunknown_1\030\007 \001(\005\022\024\n\014text_scan_id\030\010"
  " \001(\005\022\021\n\tunknown_3\030\t \001(\005\"\326\001\n\021QRScanRespMe"
  "ssage\022C\n\tqr_result\030\001 \003(\01320.utility_proto"
  "buf.QRScanRespMessage.QRScanResult\022\021\n\tun"
  "known_0\030\002 \001(\005\032i\n\014QRScanResult\022\016\n\006result\030"
  "\001 \001(\014\022\020\n\010unknow_0\030\002 \001(\005\022\021\n\tunknown_1\030\003 \001"
  "(\001\022\021\n\tunknown_2\030\004 \001(\001\022\021\n\tunknown_3\030\005 \001(\005"
  "b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_utility_5fprotobuf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_utility_5fprotobuf_2eproto = {
    false, false, 848, descriptor_table_protodef_utility_5fprotobuf_2eproto,
    "utility_protobuf.proto",
    &descriptor_table_utility_5fprotobuf_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_utility_5fprotobuf_2eproto::offsets,
    file_level_metadata_utility_5fprotobuf_2eproto, file_level_enum_descriptors_utility_5fprotobuf_2eproto,
    file_level_service_descriptors_utility_5fprotobuf_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_utility_5fprotobuf_2eproto_getter() {
  return &descriptor_table_utility_5fprotobuf_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_utility_5fprotobuf_2eproto(&descriptor_table_utility_5fprotobuf_2eproto);
namespace utility_protobuf {

// ===================================================================

class InitReqMessage::_Internal {
 public:
};

InitReqMessage::InitReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.InitReqMessage)
}
InitReqMessage::InitReqMessage(const InitReqMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&expire_timestamp_, &from.expire_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&expire_timestamp_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.InitReqMessage)
}

inline void InitReqMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&expire_timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&expire_timestamp_)) + sizeof(type_));
}

InitReqMessage::~InitReqMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.InitReqMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitReqMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InitReqMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InitReqMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.InitReqMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&expire_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&expire_timestamp_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitReqMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 expire_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          expire_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitReqMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.InitReqMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 expire_timestamp = 1;
  if (this->_internal_expire_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_expire_timestamp(), target);
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.InitReqMessage)
  return target;
}

size_t InitReqMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.InitReqMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 expire_timestamp = 1;
  if (this->_internal_expire_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_expire_timestamp());
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitReqMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InitReqMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitReqMessage::GetClassData() const { return &_class_data_; }

void InitReqMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InitReqMessage *>(to)->MergeFrom(
      static_cast<const InitReqMessage &>(from));
}


void InitReqMessage::MergeFrom(const InitReqMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.InitReqMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_expire_timestamp() != 0) {
    _internal_set_expire_timestamp(from._internal_expire_timestamp());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitReqMessage::CopyFrom(const InitReqMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.InitReqMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitReqMessage::IsInitialized() const {
  return true;
}

void InitReqMessage::InternalSwap(InitReqMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitReqMessage, type_)
      + sizeof(InitReqMessage::type_)
      - PROTOBUF_FIELD_OFFSET(InitReqMessage, expire_timestamp_)>(
          reinterpret_cast<char*>(&expire_timestamp_),
          reinterpret_cast<char*>(&other->expire_timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InitReqMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[0]);
}

// ===================================================================

class InitRespMessage::_Internal {
 public:
};

InitRespMessage::InitRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.InitRespMessage)
}
InitRespMessage::InitRespMessage(const InitRespMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.InitRespMessage)
}

inline void InitRespMessage::SharedCtor() {
status_ = 0;
}

InitRespMessage::~InitRespMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.InitRespMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitRespMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InitRespMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InitRespMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.InitRespMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitRespMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitRespMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.InitRespMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.InitRespMessage)
  return target;
}

size_t InitRespMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.InitRespMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitRespMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InitRespMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitRespMessage::GetClassData() const { return &_class_data_; }

void InitRespMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InitRespMessage *>(to)->MergeFrom(
      static_cast<const InitRespMessage &>(from));
}


void InitRespMessage::MergeFrom(const InitRespMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.InitRespMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitRespMessage::CopyFrom(const InitRespMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.InitRespMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitRespMessage::IsInitialized() const {
  return true;
}

void InitRespMessage::InternalSwap(InitRespMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InitRespMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[1]);
}

// ===================================================================

class ResampleImageReqMessage::_Internal {
 public:
};

ResampleImageReqMessage::ResampleImageReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.ResampleImageReqMessage)
}
ResampleImageReqMessage::ResampleImageReqMessage(const ResampleImageReqMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  decode_pic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    decode_pic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_decode_pic().empty()) {
    decode_pic_.Set(from._internal_decode_pic(), 
      GetArenaForAllocation());
  }
  encode_pic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    encode_pic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_encode_pic().empty()) {
    encode_pic_.Set(from._internal_encode_pic(), 
      GetArenaForAllocation());
  }
  ::memcpy(&re_pic_x_, &from.re_pic_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown_0_) -
    reinterpret_cast<char*>(&re_pic_x_)) + sizeof(unknown_0_));
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.ResampleImageReqMessage)
}

inline void ResampleImageReqMessage::SharedCtor() {
decode_pic_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  decode_pic_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
encode_pic_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  encode_pic_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&re_pic_x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unknown_0_) -
    reinterpret_cast<char*>(&re_pic_x_)) + sizeof(unknown_0_));
}

ResampleImageReqMessage::~ResampleImageReqMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.ResampleImageReqMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResampleImageReqMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  decode_pic_.Destroy();
  encode_pic_.Destroy();
}

void ResampleImageReqMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResampleImageReqMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.ResampleImageReqMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decode_pic_.ClearToEmpty();
  encode_pic_.ClearToEmpty();
  ::memset(&re_pic_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown_0_) -
      reinterpret_cast<char*>(&re_pic_x_)) + sizeof(unknown_0_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResampleImageReqMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string decode_pic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_decode_pic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "utility_protobuf.ResampleImageReqMessage.decode_pic"));
        } else
          goto handle_unusual;
        continue;
      // string encode_pic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_encode_pic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "utility_protobuf.ResampleImageReqMessage.encode_pic"));
        } else
          goto handle_unusual;
        continue;
      // int32 re_pic_x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          re_pic_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 re_pic_y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          re_pic_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_0 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          unknown_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResampleImageReqMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.ResampleImageReqMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string decode_pic = 1;
  if (!this->_internal_decode_pic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_decode_pic().data(), static_cast<int>(this->_internal_decode_pic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utility_protobuf.ResampleImageReqMessage.decode_pic");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_decode_pic(), target);
  }

  // string encode_pic = 2;
  if (!this->_internal_encode_pic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_encode_pic().data(), static_cast<int>(this->_internal_encode_pic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utility_protobuf.ResampleImageReqMessage.encode_pic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_encode_pic(), target);
  }

  // int32 re_pic_x = 3;
  if (this->_internal_re_pic_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_re_pic_x(), target);
  }

  // int32 re_pic_y = 4;
  if (this->_internal_re_pic_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_re_pic_y(), target);
  }

  // int32 unknown_0 = 5;
  if (this->_internal_unknown_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_unknown_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.ResampleImageReqMessage)
  return target;
}

size_t ResampleImageReqMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.ResampleImageReqMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string decode_pic = 1;
  if (!this->_internal_decode_pic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_decode_pic());
  }

  // string encode_pic = 2;
  if (!this->_internal_encode_pic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_encode_pic());
  }

  // int32 re_pic_x = 3;
  if (this->_internal_re_pic_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_re_pic_x());
  }

  // int32 re_pic_y = 4;
  if (this->_internal_re_pic_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_re_pic_y());
  }

  // int32 unknown_0 = 5;
  if (this->_internal_unknown_0() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResampleImageReqMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResampleImageReqMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResampleImageReqMessage::GetClassData() const { return &_class_data_; }

void ResampleImageReqMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResampleImageReqMessage *>(to)->MergeFrom(
      static_cast<const ResampleImageReqMessage &>(from));
}


void ResampleImageReqMessage::MergeFrom(const ResampleImageReqMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.ResampleImageReqMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_decode_pic().empty()) {
    _internal_set_decode_pic(from._internal_decode_pic());
  }
  if (!from._internal_encode_pic().empty()) {
    _internal_set_encode_pic(from._internal_encode_pic());
  }
  if (from._internal_re_pic_x() != 0) {
    _internal_set_re_pic_x(from._internal_re_pic_x());
  }
  if (from._internal_re_pic_y() != 0) {
    _internal_set_re_pic_y(from._internal_re_pic_y());
  }
  if (from._internal_unknown_0() != 0) {
    _internal_set_unknown_0(from._internal_unknown_0());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResampleImageReqMessage::CopyFrom(const ResampleImageReqMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.ResampleImageReqMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResampleImageReqMessage::IsInitialized() const {
  return true;
}

void ResampleImageReqMessage::InternalSwap(ResampleImageReqMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &decode_pic_, lhs_arena,
      &other->decode_pic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &encode_pic_, lhs_arena,
      &other->encode_pic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResampleImageReqMessage, unknown_0_)
      + sizeof(ResampleImageReqMessage::unknown_0_)
      - PROTOBUF_FIELD_OFFSET(ResampleImageReqMessage, re_pic_x_)>(
          reinterpret_cast<char*>(&re_pic_x_),
          reinterpret_cast<char*>(&other->re_pic_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResampleImageReqMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[2]);
}

// ===================================================================

class ResampleImageRespMessage::_Internal {
 public:
};

ResampleImageRespMessage::ResampleImageRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.ResampleImageRespMessage)
}
ResampleImageRespMessage::ResampleImageRespMessage(const ResampleImageRespMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.ResampleImageRespMessage)
}

inline void ResampleImageRespMessage::SharedCtor() {
err_code_ = 0;
}

ResampleImageRespMessage::~ResampleImageRespMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.ResampleImageRespMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResampleImageRespMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResampleImageRespMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResampleImageRespMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.ResampleImageRespMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResampleImageRespMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResampleImageRespMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.ResampleImageRespMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_err_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.ResampleImageRespMessage)
  return target;
}

size_t ResampleImageRespMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.ResampleImageRespMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err_code = 1;
  if (this->_internal_err_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_err_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResampleImageRespMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResampleImageRespMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResampleImageRespMessage::GetClassData() const { return &_class_data_; }

void ResampleImageRespMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResampleImageRespMessage *>(to)->MergeFrom(
      static_cast<const ResampleImageRespMessage &>(from));
}


void ResampleImageRespMessage::MergeFrom(const ResampleImageRespMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.ResampleImageRespMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResampleImageRespMessage::CopyFrom(const ResampleImageRespMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.ResampleImageRespMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResampleImageRespMessage::IsInitialized() const {
  return true;
}

void ResampleImageRespMessage::InternalSwap(ResampleImageRespMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResampleImageRespMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[3]);
}

// ===================================================================

class TextScanMessage::_Internal {
 public:
};

TextScanMessage::TextScanMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.TextScanMessage)
}
TextScanMessage::TextScanMessage(const TextScanMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pic_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pic_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pic_path().empty()) {
    pic_path_.Set(from._internal_pic_path(), 
      GetArenaForAllocation());
  }
  ::memcpy(&text_scan_id_, &from.text_scan_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rate_) -
    reinterpret_cast<char*>(&text_scan_id_)) + sizeof(rate_));
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.TextScanMessage)
}

inline void TextScanMessage::SharedCtor() {
pic_path_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pic_path_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&text_scan_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rate_) -
    reinterpret_cast<char*>(&text_scan_id_)) + sizeof(rate_));
}

TextScanMessage::~TextScanMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.TextScanMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TextScanMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pic_path_.Destroy();
}

void TextScanMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TextScanMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.TextScanMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pic_path_.ClearToEmpty();
  ::memset(&text_scan_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rate_) -
      reinterpret_cast<char*>(&text_scan_id_)) + sizeof(rate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TextScanMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 text_scan_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          text_scan_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pic_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pic_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "utility_protobuf.TextScanMessage.pic_path"));
        } else
          goto handle_unusual;
        continue;
      // int32 have_text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          have_text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_0 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          unknown_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float rate = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TextScanMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.TextScanMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 text_scan_id = 1;
  if (this->_internal_text_scan_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_text_scan_id(), target);
  }

  // string pic_path = 2;
  if (!this->_internal_pic_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pic_path().data(), static_cast<int>(this->_internal_pic_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utility_protobuf.TextScanMessage.pic_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pic_path(), target);
  }

  // int32 have_text = 3;
  if (this->_internal_have_text() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_have_text(), target);
  }

  // int32 unknown_0 = 4;
  if (this->_internal_unknown_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_unknown_0(), target);
  }

  // float rate = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rate = this->_internal_rate();
  uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.TextScanMessage)
  return target;
}

size_t TextScanMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.TextScanMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pic_path = 2;
  if (!this->_internal_pic_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pic_path());
  }

  // int32 text_scan_id = 1;
  if (this->_internal_text_scan_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_text_scan_id());
  }

  // int32 have_text = 3;
  if (this->_internal_have_text() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_have_text());
  }

  // int32 unknown_0 = 4;
  if (this->_internal_unknown_0() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_0());
  }

  // float rate = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rate = this->_internal_rate();
  uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TextScanMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TextScanMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TextScanMessage::GetClassData() const { return &_class_data_; }

void TextScanMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TextScanMessage *>(to)->MergeFrom(
      static_cast<const TextScanMessage &>(from));
}


void TextScanMessage::MergeFrom(const TextScanMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.TextScanMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pic_path().empty()) {
    _internal_set_pic_path(from._internal_pic_path());
  }
  if (from._internal_text_scan_id() != 0) {
    _internal_set_text_scan_id(from._internal_text_scan_id());
  }
  if (from._internal_have_text() != 0) {
    _internal_set_have_text(from._internal_have_text());
  }
  if (from._internal_unknown_0() != 0) {
    _internal_set_unknown_0(from._internal_unknown_0());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rate = from._internal_rate();
  uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    _internal_set_rate(from._internal_rate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TextScanMessage::CopyFrom(const TextScanMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.TextScanMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextScanMessage::IsInitialized() const {
  return true;
}

void TextScanMessage::InternalSwap(TextScanMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pic_path_, lhs_arena,
      &other->pic_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextScanMessage, rate_)
      + sizeof(TextScanMessage::rate_)
      - PROTOBUF_FIELD_OFFSET(TextScanMessage, text_scan_id_)>(
          reinterpret_cast<char*>(&text_scan_id_),
          reinterpret_cast<char*>(&other->text_scan_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TextScanMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[4]);
}

// ===================================================================

class QRScanReqMessage::_Internal {
 public:
};

QRScanReqMessage::QRScanReqMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.QRScanReqMessage)
}
QRScanReqMessage::QRScanReqMessage(const QRScanReqMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  origin_pic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    origin_pic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_origin_pic().empty()) {
    origin_pic_.Set(from._internal_origin_pic(), 
      GetArenaForAllocation());
  }
  decode_pic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    decode_pic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_decode_pic().empty()) {
    decode_pic_.Set(from._internal_decode_pic(), 
      GetArenaForAllocation());
  }
  encode_pic_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    encode_pic_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_encode_pic_data().empty()) {
    encode_pic_data_.Set(from._internal_encode_pic_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&unknown_0_, &from.unknown_0_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown_3_) -
    reinterpret_cast<char*>(&unknown_0_)) + sizeof(unknown_3_));
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.QRScanReqMessage)
}

inline void QRScanReqMessage::SharedCtor() {
origin_pic_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  origin_pic_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
decode_pic_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  decode_pic_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
encode_pic_data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  encode_pic_data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&unknown_0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unknown_3_) -
    reinterpret_cast<char*>(&unknown_0_)) + sizeof(unknown_3_));
}

QRScanReqMessage::~QRScanReqMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.QRScanReqMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QRScanReqMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  origin_pic_.Destroy();
  decode_pic_.Destroy();
  encode_pic_data_.Destroy();
}

void QRScanReqMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QRScanReqMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.QRScanReqMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_pic_.ClearToEmpty();
  decode_pic_.ClearToEmpty();
  encode_pic_data_.ClearToEmpty();
  ::memset(&unknown_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown_3_) -
      reinterpret_cast<char*>(&unknown_0_)) + sizeof(unknown_3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QRScanReqMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string origin_pic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_origin_pic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "utility_protobuf.QRScanReqMessage.origin_pic"));
        } else
          goto handle_unusual;
        continue;
      // string decode_pic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_decode_pic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "utility_protobuf.QRScanReqMessage.decode_pic"));
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_0 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          unknown_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes encode_pic_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_encode_pic_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 encode_pic_x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          encode_pic_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 encode_pic_y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          encode_pic_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          unknown_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 text_scan_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          text_scan_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_3 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          unknown_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QRScanReqMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.QRScanReqMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string origin_pic = 1;
  if (!this->_internal_origin_pic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_origin_pic().data(), static_cast<int>(this->_internal_origin_pic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utility_protobuf.QRScanReqMessage.origin_pic");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_origin_pic(), target);
  }

  // string decode_pic = 2;
  if (!this->_internal_decode_pic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_decode_pic().data(), static_cast<int>(this->_internal_decode_pic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utility_protobuf.QRScanReqMessage.decode_pic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_decode_pic(), target);
  }

  // int32 unknown_0 = 3;
  if (this->_internal_unknown_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_unknown_0(), target);
  }

  // bytes encode_pic_data = 4;
  if (!this->_internal_encode_pic_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_encode_pic_data(), target);
  }

  // int32 encode_pic_x = 5;
  if (this->_internal_encode_pic_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_encode_pic_x(), target);
  }

  // int32 encode_pic_y = 6;
  if (this->_internal_encode_pic_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_encode_pic_y(), target);
  }

  // int32 unknown_1 = 7;
  if (this->_internal_unknown_1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_unknown_1(), target);
  }

  // int32 text_scan_id = 8;
  if (this->_internal_text_scan_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_text_scan_id(), target);
  }

  // int32 unknown_3 = 9;
  if (this->_internal_unknown_3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_unknown_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.QRScanReqMessage)
  return target;
}

size_t QRScanReqMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.QRScanReqMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string origin_pic = 1;
  if (!this->_internal_origin_pic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_origin_pic());
  }

  // string decode_pic = 2;
  if (!this->_internal_decode_pic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_decode_pic());
  }

  // bytes encode_pic_data = 4;
  if (!this->_internal_encode_pic_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_encode_pic_data());
  }

  // int32 unknown_0 = 3;
  if (this->_internal_unknown_0() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_0());
  }

  // int32 encode_pic_x = 5;
  if (this->_internal_encode_pic_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_encode_pic_x());
  }

  // int32 encode_pic_y = 6;
  if (this->_internal_encode_pic_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_encode_pic_y());
  }

  // int32 unknown_1 = 7;
  if (this->_internal_unknown_1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_1());
  }

  // int32 text_scan_id = 8;
  if (this->_internal_text_scan_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_text_scan_id());
  }

  // int32 unknown_3 = 9;
  if (this->_internal_unknown_3() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_3());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QRScanReqMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QRScanReqMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QRScanReqMessage::GetClassData() const { return &_class_data_; }

void QRScanReqMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QRScanReqMessage *>(to)->MergeFrom(
      static_cast<const QRScanReqMessage &>(from));
}


void QRScanReqMessage::MergeFrom(const QRScanReqMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.QRScanReqMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_origin_pic().empty()) {
    _internal_set_origin_pic(from._internal_origin_pic());
  }
  if (!from._internal_decode_pic().empty()) {
    _internal_set_decode_pic(from._internal_decode_pic());
  }
  if (!from._internal_encode_pic_data().empty()) {
    _internal_set_encode_pic_data(from._internal_encode_pic_data());
  }
  if (from._internal_unknown_0() != 0) {
    _internal_set_unknown_0(from._internal_unknown_0());
  }
  if (from._internal_encode_pic_x() != 0) {
    _internal_set_encode_pic_x(from._internal_encode_pic_x());
  }
  if (from._internal_encode_pic_y() != 0) {
    _internal_set_encode_pic_y(from._internal_encode_pic_y());
  }
  if (from._internal_unknown_1() != 0) {
    _internal_set_unknown_1(from._internal_unknown_1());
  }
  if (from._internal_text_scan_id() != 0) {
    _internal_set_text_scan_id(from._internal_text_scan_id());
  }
  if (from._internal_unknown_3() != 0) {
    _internal_set_unknown_3(from._internal_unknown_3());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QRScanReqMessage::CopyFrom(const QRScanReqMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.QRScanReqMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QRScanReqMessage::IsInitialized() const {
  return true;
}

void QRScanReqMessage::InternalSwap(QRScanReqMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &origin_pic_, lhs_arena,
      &other->origin_pic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &decode_pic_, lhs_arena,
      &other->decode_pic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &encode_pic_data_, lhs_arena,
      &other->encode_pic_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QRScanReqMessage, unknown_3_)
      + sizeof(QRScanReqMessage::unknown_3_)
      - PROTOBUF_FIELD_OFFSET(QRScanReqMessage, unknown_0_)>(
          reinterpret_cast<char*>(&unknown_0_),
          reinterpret_cast<char*>(&other->unknown_0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QRScanReqMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[5]);
}

// ===================================================================

class QRScanRespMessage_QRScanResult::_Internal {
 public:
};

QRScanRespMessage_QRScanResult::QRScanRespMessage_QRScanResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.QRScanRespMessage.QRScanResult)
}
QRScanRespMessage_QRScanResult::QRScanRespMessage_QRScanResult(const QRScanRespMessage_QRScanResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    result_.Set(from._internal_result(), 
      GetArenaForAllocation());
  }
  ::memcpy(&unknown_1_, &from.unknown_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown_2_) -
    reinterpret_cast<char*>(&unknown_1_)) + sizeof(unknown_2_));
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.QRScanRespMessage.QRScanResult)
}

inline void QRScanRespMessage_QRScanResult::SharedCtor() {
result_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  result_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&unknown_1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unknown_2_) -
    reinterpret_cast<char*>(&unknown_1_)) + sizeof(unknown_2_));
}

QRScanRespMessage_QRScanResult::~QRScanRespMessage_QRScanResult() {
  // @@protoc_insertion_point(destructor:utility_protobuf.QRScanRespMessage.QRScanResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QRScanRespMessage_QRScanResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_.Destroy();
}

void QRScanRespMessage_QRScanResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QRScanRespMessage_QRScanResult::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.QRScanRespMessage.QRScanResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty();
  ::memset(&unknown_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown_2_) -
      reinterpret_cast<char*>(&unknown_1_)) + sizeof(unknown_2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QRScanRespMessage_QRScanResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 unknow_0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          unknow_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double unknown_1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          unknown_1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double unknown_2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          unknown_2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          unknown_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QRScanRespMessage_QRScanResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.QRScanRespMessage.QRScanResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes result = 1;
  if (!this->_internal_result().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_result(), target);
  }

  // int32 unknow_0 = 2;
  if (this->_internal_unknow_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_unknow_0(), target);
  }

  // double unknown_1 = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_1 = this->_internal_unknown_1();
  uint64_t raw_unknown_1;
  memcpy(&raw_unknown_1, &tmp_unknown_1, sizeof(tmp_unknown_1));
  if (raw_unknown_1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_unknown_1(), target);
  }

  // double unknown_2 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_2 = this->_internal_unknown_2();
  uint64_t raw_unknown_2;
  memcpy(&raw_unknown_2, &tmp_unknown_2, sizeof(tmp_unknown_2));
  if (raw_unknown_2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_unknown_2(), target);
  }

  // int32 unknown_3 = 5;
  if (this->_internal_unknown_3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_unknown_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.QRScanRespMessage.QRScanResult)
  return target;
}

size_t QRScanRespMessage_QRScanResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.QRScanRespMessage.QRScanResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_result());
  }

  // double unknown_1 = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_1 = this->_internal_unknown_1();
  uint64_t raw_unknown_1;
  memcpy(&raw_unknown_1, &tmp_unknown_1, sizeof(tmp_unknown_1));
  if (raw_unknown_1 != 0) {
    total_size += 1 + 8;
  }

  // int32 unknow_0 = 2;
  if (this->_internal_unknow_0() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknow_0());
  }

  // int32 unknown_3 = 5;
  if (this->_internal_unknown_3() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_3());
  }

  // double unknown_2 = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_2 = this->_internal_unknown_2();
  uint64_t raw_unknown_2;
  memcpy(&raw_unknown_2, &tmp_unknown_2, sizeof(tmp_unknown_2));
  if (raw_unknown_2 != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QRScanRespMessage_QRScanResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QRScanRespMessage_QRScanResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QRScanRespMessage_QRScanResult::GetClassData() const { return &_class_data_; }

void QRScanRespMessage_QRScanResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QRScanRespMessage_QRScanResult *>(to)->MergeFrom(
      static_cast<const QRScanRespMessage_QRScanResult &>(from));
}


void QRScanRespMessage_QRScanResult::MergeFrom(const QRScanRespMessage_QRScanResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.QRScanRespMessage.QRScanResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _internal_set_result(from._internal_result());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_1 = from._internal_unknown_1();
  uint64_t raw_unknown_1;
  memcpy(&raw_unknown_1, &tmp_unknown_1, sizeof(tmp_unknown_1));
  if (raw_unknown_1 != 0) {
    _internal_set_unknown_1(from._internal_unknown_1());
  }
  if (from._internal_unknow_0() != 0) {
    _internal_set_unknow_0(from._internal_unknow_0());
  }
  if (from._internal_unknown_3() != 0) {
    _internal_set_unknown_3(from._internal_unknown_3());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_unknown_2 = from._internal_unknown_2();
  uint64_t raw_unknown_2;
  memcpy(&raw_unknown_2, &tmp_unknown_2, sizeof(tmp_unknown_2));
  if (raw_unknown_2 != 0) {
    _internal_set_unknown_2(from._internal_unknown_2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QRScanRespMessage_QRScanResult::CopyFrom(const QRScanRespMessage_QRScanResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.QRScanRespMessage.QRScanResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QRScanRespMessage_QRScanResult::IsInitialized() const {
  return true;
}

void QRScanRespMessage_QRScanResult::InternalSwap(QRScanRespMessage_QRScanResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &result_, lhs_arena,
      &other->result_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QRScanRespMessage_QRScanResult, unknown_2_)
      + sizeof(QRScanRespMessage_QRScanResult::unknown_2_)
      - PROTOBUF_FIELD_OFFSET(QRScanRespMessage_QRScanResult, unknown_1_)>(
          reinterpret_cast<char*>(&unknown_1_),
          reinterpret_cast<char*>(&other->unknown_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QRScanRespMessage_QRScanResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[6]);
}

// ===================================================================

class QRScanRespMessage::_Internal {
 public:
};

QRScanRespMessage::QRScanRespMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  qr_result_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:utility_protobuf.QRScanRespMessage)
}
QRScanRespMessage::QRScanRespMessage(const QRScanRespMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      qr_result_(from.qr_result_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unknown_0_ = from.unknown_0_;
  // @@protoc_insertion_point(copy_constructor:utility_protobuf.QRScanRespMessage)
}

inline void QRScanRespMessage::SharedCtor() {
unknown_0_ = 0;
}

QRScanRespMessage::~QRScanRespMessage() {
  // @@protoc_insertion_point(destructor:utility_protobuf.QRScanRespMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QRScanRespMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QRScanRespMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QRScanRespMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_protobuf.QRScanRespMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qr_result_.Clear();
  unknown_0_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QRScanRespMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .utility_protobuf.QRScanRespMessage.QRScanResult qr_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_qr_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 unknown_0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          unknown_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QRScanRespMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_protobuf.QRScanRespMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .utility_protobuf.QRScanRespMessage.QRScanResult qr_result = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_qr_result_size()); i < n; i++) {
    const auto& repfield = this->_internal_qr_result(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 unknown_0 = 2;
  if (this->_internal_unknown_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_unknown_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_protobuf.QRScanRespMessage)
  return target;
}

size_t QRScanRespMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_protobuf.QRScanRespMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .utility_protobuf.QRScanRespMessage.QRScanResult qr_result = 1;
  total_size += 1UL * this->_internal_qr_result_size();
  for (const auto& msg : this->qr_result_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 unknown_0 = 2;
  if (this->_internal_unknown_0() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unknown_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QRScanRespMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QRScanRespMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QRScanRespMessage::GetClassData() const { return &_class_data_; }

void QRScanRespMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QRScanRespMessage *>(to)->MergeFrom(
      static_cast<const QRScanRespMessage &>(from));
}


void QRScanRespMessage::MergeFrom(const QRScanRespMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_protobuf.QRScanRespMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  qr_result_.MergeFrom(from.qr_result_);
  if (from._internal_unknown_0() != 0) {
    _internal_set_unknown_0(from._internal_unknown_0());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QRScanRespMessage::CopyFrom(const QRScanRespMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_protobuf.QRScanRespMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QRScanRespMessage::IsInitialized() const {
  return true;
}

void QRScanRespMessage::InternalSwap(QRScanRespMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  qr_result_.InternalSwap(&other->qr_result_);
  swap(unknown_0_, other->unknown_0_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QRScanRespMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_utility_5fprotobuf_2eproto_getter, &descriptor_table_utility_5fprotobuf_2eproto_once,
      file_level_metadata_utility_5fprotobuf_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace utility_protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::utility_protobuf::InitReqMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::InitReqMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::InitReqMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::InitRespMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::InitRespMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::InitRespMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::ResampleImageReqMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::ResampleImageReqMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::ResampleImageReqMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::ResampleImageRespMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::ResampleImageRespMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::ResampleImageRespMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::TextScanMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::TextScanMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::TextScanMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::QRScanReqMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::QRScanReqMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::QRScanReqMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::QRScanRespMessage_QRScanResult*
Arena::CreateMaybeMessage< ::utility_protobuf::QRScanRespMessage_QRScanResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::QRScanRespMessage_QRScanResult >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_protobuf::QRScanRespMessage*
Arena::CreateMaybeMessage< ::utility_protobuf::QRScanRespMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_protobuf::QRScanRespMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
